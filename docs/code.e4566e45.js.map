{"version":3,"sources":["../code/clicked.ts","code.ts"],"names":[],"mappings":"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","file":"code.e4566e45.js","sourceRoot":"../demo","sourcesContent":["/**\n * Watcher for click, double-click, or long-click event for both mouse and touch\n * @example\n * import { clicked } from 'clicked'\n *\n * function handleClick()\n * {\n *    console.log('I was clicked.')\n * }\n *\n * const div = document.getElementById('clickme')\n * const c = clicked(div, handleClick, { threshold: 15 })\n *\n * // change callback\n * c.callback = () => console.log('different clicker')\n *\n * // destroy\n * c.destroy()\n *\n * // using built-in querySelector\n * clicked('#clickme', handleClick2)\n *\n * // watching for all types of clicks\n * function handleAllClicks(e) {\n *     switch (e.type)\n *     {\n *         case 'clicked': ...\n *         case 'double-clicked': ...\n *         case 'long-clicked': ...\n *     }\n *\n *     // view UIEvent that caused callback\n *     console.log(e.event)\n * }\n * clicked('#clickme', handleAllClicks, { doubleClicked: true, longClicked: true })\n */\n\nexport interface IClickedOptions\n{\n    threshold?: number\n    clicked?: boolean\n    mouse?: boolean | MouseButtons\n    touch?: boolean | number\n    doubleClicked?: boolean\n    doubleClickedTime?: number\n    longClicked?: boolean\n    longClickedTime?: number\n    clickDown?: boolean\n    capture?: boolean\n}\n\nexport type MouseButtons = 'left' | 'right' | 'middle' | 'left-or-middle' | 'right-or-middle' | 'left-or-right'\n\nexport interface IClickedCallback\n{\n    type: 'clicked' | 'double-clicked' | 'long-clicked' | 'click-down'\n    event: MouseEvent | TouchEvent\n}\n\nconst defaultOptions: IClickedOptions = {\n    threshold: 10,\n    clicked: true,\n    mouse: true,\n    touch: 1,\n    doubleClicked: false,\n    doubleClickedTime: 300,\n    longClicked: false,\n    longClickedTime: 500,\n    capture: false,\n    clickDown: false\n}\n\ntype SetTimeoutHandle = number\n\ninterface IListeners\n{\n    mousedown: EventListenerOrEventListenerObject\n    mouseup: EventListenerOrEventListenerObject\n    mousemove: EventListenerOrEventListenerObject\n    touchstart: EventListenerOrEventListenerObject\n    touchmove: EventListenerOrEventListenerObject\n    touchcancel: EventListenerOrEventListenerObject\n    touchend: EventListenerOrEventListenerObject\n}\n\n/**\n * @param element element or querySelector entry (e.g., #id-name or .class-name)\n * @param callback called after a click, double click, or long click is registered\n * @param [options]\n * @param [options.clicked=true] dispatch event for clicked\n * @param [options.threshold=10] threshold of movement to cancel all events\n * @param [options.mouse=true] whether to listen for mouse events; can also be used to set which mouse buttons are active\n * @param [options.touch=1] whether to listen for touch events; can also be used to set the number of touch points to accept\n * @param [options.doubleClicked] dispatch event for double click\n * @param [options.doubleClickedTime=500] wait time in millseconds for double click\n * @param [options.longClicked] dispatch event for long click\n * @param [options.longClickedTime=500] wait time for long click\n * @param [options.clickDown] dispatch event for click down\n * @param [options.capture]  events will be dispatched to this registered listener before being dispatched to any EventTarget beneath it in the DOM tree\n */\nexport function clicked(element: HTMLElement | string, callback: (data: IClickedCallback) => void, options?: IClickedOptions): Clicked\n{\n    return new Clicked(element, callback, options)\n}\n\nexport class Clicked\n{\n    readonly options: IClickedOptions\n    protected element: Element\n    protected events: IListeners\n    protected callback: Function\n    protected down: boolean\n    protected lastX: number\n    protected lastY: number\n    protected doubleClickedTimeout: SetTimeoutHandle\n    protected longClickedTimeout: SetTimeoutHandle\n\n    constructor(element: HTMLElement | string, callback: (data: IClickedCallback) => void, options?: IClickedOptions)\n    {\n        if (typeof element === 'string')\n        {\n            element = document.querySelector(element) as HTMLElement\n            if (!element)\n            {\n                console.warn(`Unknown element: document.querySelector(${element}) in clicked()`)\n                return\n            }\n        }\n        this.element = element\n        this.callback = callback\n        this.options = { ...defaultOptions, ...options }\n        this.createListeners()\n    }\n\n    protected createListeners()\n    {\n        this.events = {\n            mousedown: (e: MouseEvent) => this.mousedown(e),\n            mouseup: (e: MouseEvent) => this.mouseup(e),\n            mousemove: (e: MouseEvent) => this.mousemove(e),\n            touchstart: (e: TouchEvent) => this.touchstart(e),\n            touchmove: (e: TouchEvent) => this.touchmove(e),\n            touchcancel: () => this.cancel(),\n            touchend: (e: TouchEvent) => this.touchend(e)\n        }\n        this.element.addEventListener('mousedown', this.events.mousedown, { capture: this.options.capture })\n        this.element.addEventListener('mouseup', this.events.mouseup, { capture: this.options.capture })\n        this.element.addEventListener('mousemove', this.events.mousemove, { capture: this.options.capture })\n        this.element.addEventListener('touchstart', this.events.touchstart, { passive: true, capture: this.options.capture })\n        this.element.addEventListener('touchmove', this.events.touchmove, { passive: true, capture: this.options.capture })\n        this.element.addEventListener('touchcancel', this.events.touchcancel, { capture: this.options.capture})\n        this.element.addEventListener('touchend', this.events.touchend, { capture: this.options.capture })\n    }\n\n    /** removes event listeners added by Clicked */\n    destroy()\n    {\n        this.element.removeEventListener('mousedown', this.events.mousedown)\n        this.element.removeEventListener('mouseup', this.events.mouseup)\n        this.element.removeEventListener('mousemove', this.events.mousemove)\n        this.element.removeEventListener('touchstart', this.events.touchstart)\n        this.element.removeEventListener('touchmove', this.events.touchmove)\n        this.element.removeEventListener('touchcancel', this.events.touchcancel)\n        this.element.removeEventListener('touchend', this.events.touchend)\n    }\n\n    protected touchstart(e: TouchEvent)\n    {\n        if (this.options.touch)\n        {\n            if (this.down === true)\n            {\n                this.cancel()\n            }\n            else\n            {\n                if (this.options.touch === true || e.touches.length <= this.options.touch)\n                {\n                    this.handleDown(e, e.changedTouches[0].screenX, e.changedTouches[0].screenY)\n                }\n            }\n        }\n    }\n\n    protected pastThreshold(x: number, y: number): boolean\n    {\n        return Math.abs(this.lastX - x) > this.options.threshold || Math.abs(this.lastY - y) > this.options.threshold\n    }\n\n    protected touchmove(e: TouchEvent)\n    {\n        if (this.down)\n        {\n            if (e.touches.length !== 1)\n            {\n                this.cancel()\n            }\n            else\n            {\n                const x = e.changedTouches[0].screenX\n                const y = e.changedTouches[0].screenY\n                if (this.pastThreshold(x, y))\n                {\n                    this.cancel()\n                }\n            }\n        }\n    }\n\n    /** cancel current event */\n    cancel()\n    {\n        this.down = false\n        if (this.doubleClickedTimeout)\n        {\n            clearTimeout(this.doubleClickedTimeout)\n            this.doubleClickedTimeout = null\n        }\n        if (this.longClickedTimeout)\n        {\n            clearTimeout(this.longClickedTimeout)\n            this.longClickedTimeout = null\n        }\n    }\n\n    protected touchend(e: TouchEvent)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.handleClicks(e)\n        }\n    }\n\n    protected handleClicks(e: UIEvent)\n    {\n        if (this.options.doubleClicked)\n        {\n            this.doubleClickedTimeout = this.setTimeout(() => this.doubleClickedCancel(e), this.options.doubleClickedTime)\n        }\n        else if (this.options.clicked)\n        {\n            this.callback({ event: e, type: 'clicked' })\n        }\n        if (this.longClickedTimeout)\n        {\n            clearTimeout(this.longClickedTimeout)\n            this.longClickedTimeout = null\n        }\n        this.down = false\n    }\n\n    protected handleDown(e: MouseEvent | TouchEvent, x?: number, y?: number)\n    {\n        if (this.doubleClickedTimeout)\n        {\n            if (this.pastThreshold(x, y))\n            {\n                if (this.options.clicked)\n                {\n                    this.callback({ event: e, type: 'clicked' })\n                }\n                this.cancel()\n            }\n            else\n            {\n                this.callback({ event: e, type: 'double-clicked' })\n                this.cancel()\n            }\n        }\n        else\n        {\n            this.lastX = x\n            this.lastY = y\n            this.down = true\n            if (this.options.longClicked)\n            {\n                this.longClickedTimeout = this.setTimeout(() => this.longClicked(e), this.options.longClickedTime)\n            }\n            if (this.options.clickDown)\n            {\n                this.callback({ event: e, type: 'click-down' })\n            }\n        }\n    }\n\n    protected longClicked(e: UIEvent)\n    {\n        this.longClickedTimeout = null\n        this.down = false\n        this.callback({ event: e, type: 'long-clicked' })\n    }\n\n    protected doubleClickedCancel(e: UIEvent)\n    {\n        this.doubleClickedTimeout = null\n        if (this.options.clicked)\n        {\n            this.callback({ event: e, type: 'clicked' })\n        }\n    }\n\n    protected checkMouseButtons(e: MouseEvent): boolean\n    {\n        if (this.options.mouse === false)\n        {\n            return false\n        }\n        else if (this.options.mouse === true)\n        {\n            return true\n        }\n        else if (e.button === 0)\n        {\n            return (this.options.mouse as string).indexOf('left') !== -1\n        }\n        else if (e.button === 1)\n        {\n            return (this.options.mouse as string).indexOf('middle') !== -1\n        }\n        else if (e.button === 2)\n        {\n            return (this.options.mouse as string).indexOf('right') !== -1\n        }\n    }\n\n    protected mousedown(e: MouseEvent)\n    {\n        if (this.checkMouseButtons(e))\n        {\n            if (this.down === true)\n            {\n                this.down = false\n            }\n            else\n            {\n                this.handleDown(e, e.screenX, e.screenY)\n            }\n        }\n    }\n\n    protected mousemove(e: MouseEvent)\n    {\n        if (this.down)\n        {\n            const x = e.screenX\n            const y = e.screenY\n            if (this.pastThreshold(x, y))\n            {\n                this.cancel()\n            }\n        }\n    }\n\n    protected mouseup(e: MouseEvent)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.handleClicks(e)\n        }\n    }\n\n    protected setTimeout(callback: Function, time: number): SetTimeoutHandle\n    {\n        return setTimeout(callback, time)\n    }\n}\n\n/**\n * Callback for\n * @callback Clicked~ClickedCallback\n * @param {UIEvent} event\n * @param {('clicked'|'double-clicked'|'long-clicked'|'click-down')} type\n */","import { clicked, IClickedCallback } from '../code/clicked'\n\ninterface ICountTypes\n{\n    clicked: number\n    doubleClicked: number\n    longClicked: number\n}\n\nfunction el(query: string) : HTMLElement\n{\n    return document.querySelector(query)\n}\n\nfunction countTypes(e: IClickedCallback, count: ICountTypes): string\n{\n    if (e.type === 'clicked') count.clicked++\n    else if (e.type === 'double-clicked') count.doubleClicked++\n    else if (e.type === 'long-clicked') count.longClicked++\n    return `clicked (${count.clicked}), double-clicked (${count.doubleClicked}), long-clicked (${count.longClicked})`\n}\n\nwindow.onload = () =>\n{\n    let element1Count = 0\n    clicked('.element-1', (e: IClickedCallback) =>\n    {\n        el('.response-1').innerHTML = `${e.type} (${++element1Count})`\n    })\n\n    let element2Count = 0\n    clicked('.element-2', (e: IClickedCallback) =>\n    {\n        el('.response-2').innerHTML = `${e.type} (${++element2Count})`\n    }, { doubleClicked: true, clicked: false })\n\n    let element3Count = 0\n    clicked('.element-3', (e: IClickedCallback) =>\n    {\n        el('.response-3').innerHTML = `${e.type} (${++element3Count})`\n    }, { longClicked: true, clicked: false })\n\n    const element4Count: ICountTypes = { clicked: 0, longClicked: 0, doubleClicked: 0}\n    clicked('.element-4', (e: IClickedCallback) =>\n    {\n        el('.response-4').innerHTML = countTypes(e, element4Count)\n    }, { doubleClicked: true, longClicked: true })\n\n    let element5Count = 0\n    clicked('.element-5', (e: IClickedCallback) =>\n    {\n        el('.response-5').innerHTML = `${e.type} (${++element5Count})`\n    }, { doubleClicked: true, doubleClickedTime: 1000, clicked: false })\n\n    let element6Count = 0\n    clicked('.element-6', (e: IClickedCallback) =>\n    {\n        el('.response-6').innerHTML = `${e.type} (${++element6Count})`\n    }, { longClicked: true, longClickedTime: 1000, clicked: false })\n\n    let element7Count: ICountTypes = { clicked: 0, longClicked: 0, doubleClicked: 0 }\n    clicked('.element-7', (e: IClickedCallback) =>\n    {\n        el('.response-7').innerHTML = countTypes(e, element7Count)\n    }, { mouse: 'right', longClicked: true, doubleClicked: true })\n\n    let element8Count: ICountTypes = { clicked: 0, longClicked: 0, doubleClicked: 0 }\n    clicked('.element-8', (e: IClickedCallback) =>\n    {\n        el('.response-8').innerHTML = countTypes(e, element8Count)\n    }, { mouse: false, doubleClicked: true, longClicked: true })\n\n    // let element9Count = 0\n    // clicked('.element-9', (e: IClickedCallback) =>\n    // {\n    //     el('.response-9').innerHTML = `${e.type} (${++element9Count})`\n    // }, { touch: false })\n\n    // hide context menu during right click\n    window.addEventListener('contextmenu', (e: MouseEvent) => e.preventDefault())\n}"]}