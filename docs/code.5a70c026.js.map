{"version":3,"sources":["../clicked.js","code.js"],"names":["defaultOptions","thresshold","doubleClicked","doubleClickedTime","longClicked","longClickedTime","capture","clicked","element","callback","options","Clicked","document","querySelector","Object","assign","events","mousedown","e","mouseup","mousemove","touchstart","touchmove","touchcancel","cancel","touchend","addEventListener","passive","console","warn","removeEventListener","down","touches","length","handleDown","changedTouches","screenX","screenY","x","y","Math","abs","lastX","threshhold","lastY","pastThreshhold","doubleClickedTimeout","clearTimeout","longClickedTimeout","preventDefault","handleClicks","pointerId","setTimeout","event","type","longClikedTimeout","el","query","window","onload","innerHTML"],"mappings":"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","file":"code.5a70c026.js","sourceRoot":"../test","sourcesContent":["/**\n * Watcher for click, double-click, or long-click event for both mouse and touch\n * @example\n * import { clicked } from 'clicked'\n *\n * function handleClick()\n * {\n *    console.log('I was clicked.')\n * }\n *\n * const div = document.getElementById('clickme')\n * const c = clicked(div, handleClick, { thresshold: 15 })\n *\n * // change callback\n * c.callback = () => console.log('different clicker')\n *\n * // destroy\n * c.destroy()\n *\n * // using built-in querySelector\n * clicked('#clickme', handleClick2)\n *\n * // watching for all types of clicks\n * function handleAllClicks(e) {\n *     switch (e.type)\n *     {\n *         case 'clicked': ...\n *         case 'double-clicked': ...\n *         case 'long-clicked': ...\n *     }\n *\n *     // view UIEvent that caused callback\n *     console.log(e.event)\n * }\n * clicked('#clickme', handleAllClicks, { doubleClicked: true, longClicked: true })\n */\n\n/** @type {object} */\nconst defaultOptions = {\n    thresshold: 10,\n    doubleClicked: false,\n    doubleClickedTime: 300,\n    longClicked: false,\n    longClickedTime: 500,\n    capture: false\n}\n\n/**\n * @param {HTMLElement|string} element or querySelector entry (e.g., #id-name or .class-name)\n * @param {ClickedCallback} callback called after a click, double click, or long click is registered\n * @param {object} [options]\n * @param {number} [options.thresshold=10] if touch moves threshhold-pixels then the touch-click is cancelled\n * @param {boolean} [options.doubleClicked] enable watcher for double click\n * @param {number} [options.doubleClickedTime=500] wait time in millseconds for double click\n * @param {boolean} [options.longClicked] enable watcher for long click\n * @param {number} [options.longClickedTime=500] wait time for long click\n * @param {boolean} [options.capture]  events will be dispatched to this registered listener before being dispatched to any EventTarget beneath it in the DOM tree\n * @returns {Clicked}\n */\nexport function clicked(element, callback, options)\n{\n    return new Clicked(element, callback, options)\n}\n\nclass Clicked\n{\n    constructor(element, callback, options)\n    {\n        if (typeof element === 'string')\n        {\n            element = document.querySelector(element)\n            if (!element)\n            {\n                console.warn(`Unknown element: document.querySelector(${element}) in clicked()`)\n                return\n            }\n        }\n        this.options = Object.assign({}, defaultOptions, options)\n        this.events = {\n            mousedown: (e) => this.mousedown(e),\n            mouseup: (e) => this.mouseup(e),\n            mousemove: (e) => this.mousemove(e),\n            touchstart: (e) => this.touchstart(e),\n            touchmove: (e) => this.touchmove(e),\n            touchcancel: (e) => this.cancel(e),\n            touchend: (e) => this.touchend(e)\n        }\n        element.addEventListener('mousedown', this.events.mousedown, { capture: this.options.capture })\n        element.addEventListener('mouseup', this.events.mouseup, { capture: this.options.capture })\n        element.addEventListener('mousemove', this.events.mousemove, { capture: this.options.capture })\n        element.addEventListener('touchstart', this.events.touchstart, { passive: true, capture: this.options.capture })\n        element.addEventListener('touchmove', this.events.touchmove, { passive: true, capture: this.options.capture })\n        element.addEventListener('touchcancel', this.events.touchcancel, { capture: this.options.capture})\n        element.addEventListener('touchend', this.events.touchend, { capture: this.options.capture })\n        this.element = element\n        this.callback = callback\n    }\n\n    /**\n     * removes event listeners added by Clicked\n     */\n    destroy()\n    {\n        this.element.removeEventListener('mousedown', this.events.mousedown)\n        this.element.removeEventListener('mouseup', this.events.mouseup)\n        this.element.removeEventListener('mousemove', this.events.mousemove)\n        this.element.removeEventListener('touchstart', this.events.touchstart, { passive: true })\n        this.element.removeEventListener('touchmove', this.events.touchmove, { passive: true })\n        this.element.removeEventListener('touchcancel', this.events.touchcancel)\n        this.element.removeEventListener('touchend', this.events.touchend)\n    }\n\n    touchstart(e)\n    {\n        if (this.down === true)\n        {\n            this.cancel()\n        }\n        else\n        {\n            if (e.touches.length === 1)\n            {\n                this.handleDown(e.changedTouches[0].screenX, e.changedTouches[0].screenY)\n            }\n        }\n    }\n\n    pastThreshhold(x, y)\n    {\n        return Math.abs(this.lastX - x) > this.threshhold || Math.abs(this.lastY - y) > this.threshhold\n    }\n\n    touchmove(e)\n    {\n        if (this.down)\n        {\n            if (e.touches.length !== 1)\n            {\n                this.cancel()\n            }\n            else\n            {\n                const x = e.changedTouches[0].screenX\n                const y = e.changedTouches[0].screenY\n                if (this.pastThreshhold(x, y))\n                {\n                    this.cancel()\n                }\n            }\n        }\n    }\n\n    /** cancel current event */\n    cancel()\n    {\n        this.down = false\n        if (this.doubleClickedTimeout)\n        {\n            clearTimeout(this.doubleClickedTimeout)\n            this.doubleClickedTimeout = null\n        }\n        if (this.longClickedTimeout)\n        {\n            clearTimeout(this.longClickedTimeout)\n            this.longClickedTimeout = null\n        }\n    }\n\n    touchend(e)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.handleClicks(e, e.pointerId)\n        }\n    }\n\n    handleClicks(e)\n    {\n        if (this.options.doubleClicked)\n        {\n            this.doubleClickedTimeout = setTimeout(() => this.doubleClicked(e), this.options.doubleClickedTime)\n        }\n        else\n        {\n            this.callback({ event: e, type: 'clicked' })\n        }\n        if (this.longClickedTimeout)\n        {\n            clearTimeout(this.longClickedTimeout)\n            this.longClickedTimeout = null\n        }\n        this.down = false\n    }\n\n    handleDown(e, x, y)\n    {\n        if (this.doubleClickedTimeout)\n        {\n            if (this.pastThreshhold(x, y))\n            {\n                this.callback({ event: e, type: 'clicked' })\n                this.cancel()\n            }\n            else\n            {\n                this.callback({ event: e, type: 'double-clicked' })\n                this.cancel()\n            }\n        }\n        else\n        {\n            this.lastX = x\n            this.lastY = y\n            this.down = true\n            if (this.options.longClicked)\n            {\n                this.longClickedTimeout = setTimeout(() => this.longClicked(e), this.options.longClickedTime)\n            }\n        }\n    }\n\n    longClicked(e)\n    {\n        this.longClikedTimeout = null\n        this.down = false\n        this.callback({ event: e, type: 'long-clicked' })\n    }\n\n    doubleClicked(e)\n    {\n        this.doubleClickedTimeout = null\n        this.callback({ event: e, type: 'clicked' })\n    }\n\n    mousedown(e)\n    {\n        if (this.down === true)\n        {\n            this.down = false\n        }\n        else\n        {\n            this.handleDown(e, e.screenX, e.screenY)\n        }\n    }\n\n    mousemove(e)\n    {\n        if (this.down)\n        {\n            const x = e.screenX\n            const y = e.screenY\n            if (this.pastThreshhold(x, y))\n            {\n                this.cancel()\n            }\n        }\n    }\n\n    mouseup(e)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.handleClicks(e)\n        }\n    }\n}\n\n/**\n * Callback for\n * @callback Clicked~ClickedCallback\n * @param {UIEvent} event\n * @param {('clicked'|'double-clicked'|'long-clicked')} type\n */","import { clicked } from '../clicked.js'\n\nfunction el(query)\n{\n    return document.querySelector(query)\n}\n\nwindow.onload = () =>\n{\n    clicked('.element-1', e => el('.response-1').innerHTML = e.type)\n    clicked('.element-2', e => el('.response-2').innerHTML = e.type, { doubleClicked: true })\n    clicked('.element-3', e => el('.response-3').innerHTML = e.type, { longClicked: true })\n    clicked('.element-4', e => el('.response-4').innerHTML = e.type, { doubleClicked: true, longClicked: true })\n    clicked('.element-5', e => el('.response-5').innerHTML = e.type, { doubleClicked: true, doubleClickedTime: 1000})\n    clicked('.element-6', e => el('.response-6').innerHTML = e.type, { longClicked: true, longClickedTime: 1000 })\n}"]}