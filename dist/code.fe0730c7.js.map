{"version":3,"sources":["../clicked.js","code.js"],"names":["defaultOptions","thresshold","doubleClicked","doubleClickedTime","longClicked","longClickedTime","capture","clicked","element","callback","options","Clicked","constructor","document","querySelector","Object","assign","events","mousedown","e","mouseup","mousemove","touchstart","touchmove","touchcancel","cancel","touchend","addEventListener","passive","console","warn","destroy","removeEventListener","down","touches","length","handleDown","changedTouches","screenX","screenY","pastThreshhold","x","y","Math","abs","lastX","threshhold","lastY","doubleClickedTimeout","clearTimeout","longClickedTimeout","preventDefault","handleClicks","pointerId","setTimeout","event","type","longClikedTimeout","el","query","window","onload","innerHTML"],"mappings":"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","file":"code.fe0730c7.js","sourceRoot":"../test","sourcesContent":["/**\n * Watcher for click, double-click, or long-click event for both mouse and touch\n * @example\n * import { clicked } from 'clicked'\n *\n * function handleClick()\n * {\n *    console.log('I was clicked.')\n * }\n *\n * const div = document.getElementById('clickme')\n * const c = clicked(div, handleClick, { thresshold: 15 })\n *\n * // change callback\n * c.callback = () => console.log('different clicker')\n *\n * // destroy\n * c.destroy()\n *\n * // using built-in querySelector\n * clicked('#clickme', handleClick2)\n *\n * // watching for all types of clicks\n * function handleAllClicks(e) {\n *     switch (e.type)\n *     {\n *         case 'clicked': ...\n *         case 'double-clicked': ...\n *         case 'long-clicked': ...\n *     }\n *\n *     // view UIEvent that caused callback\n *     console.log(e.event)\n * }\n * clicked('#clickme', handleAllClicks, { doubleClicked: true, longClicked: true })\n */\n\n/** @type {object} */\nconst defaultOptions = {\n    thresshold: 10,\n    doubleClicked: false,\n    doubleClickedTime: 300,\n    longClicked: false,\n    longClickedTime: 500,\n    capture: false\n}\n\n/**\n * @param {HTMLElement|string} element or querySelector entry (e.g., #id-name or .class-name)\n * @param {ClickedCallback} callback called after a click, double click, or long click is registered\n * @param {object} [options]\n * @param {number} [options.thresshold=10] if touch moves threshhold-pixels then the touch-click is cancelled\n * @param {boolean} [options.doubleClicked] enable watcher for double click\n * @param {number} [options.doubleClickedTime=500] wait time in millseconds for double click\n * @param {boolean} [options.longClicked] enable watcher for long click\n * @param {number} [options.longClickedTime=500] wait time for long click\n * @param {boolean} [options.capture]  events will be dispatched to this registered listener before being dispatched to any EventTarget beneath it in the DOM tree\n * @returns {Clicked}\n */\nexport function clicked(element, callback, options)\n{\n    return new Clicked(element, callback, options)\n}\n\nclass Clicked\n{\n    constructor(element, callback, options)\n    {\n        if (typeof element === 'string')\n        {\n            element = document.querySelector(element)\n            if (!element)\n            {\n                console.warn(`Unknown element: document.querySelector(${element}) in clicked()`)\n                return\n            }\n        }\n        this.options = Object.assign({}, defaultOptions, options)\n        this.events = {\n            mousedown: (e) => this.mousedown(e),\n            mouseup: (e) => this.mouseup(e),\n            mousemove: (e) => this.mousemove(e),\n            touchstart: (e) => this.touchstart(e),\n            touchmove: (e) => this.touchmove(e),\n            touchcancel: (e) => this.cancel(e),\n            touchend: (e) => this.touchend(e)\n        }\n        element.addEventListener('mousedown', this.events.mousedown, { capture: this.options.capture })\n        element.addEventListener('mouseup', this.events.mouseup, { capture: this.options.capture })\n        element.addEventListener('mousemove', this.events.mousemove, { capture: this.options.capture })\n        element.addEventListener('touchstart', this.events.touchstart, { passive: true, capture: this.options.capture })\n        element.addEventListener('touchmove', this.events.touchmove, { passive: true, capture: this.options.capture })\n        element.addEventListener('touchcancel', this.events.touchcancel, { capture: this.options.capture})\n        element.addEventListener('touchend', this.events.touchend, { capture: this.options.capture })\n        this.element = element\n        this.callback = callback\n    }\n\n    /**\n     * removes event listeners added by Clicked\n     */\n    destroy()\n    {\n        this.element.removeEventListener('mousedown', this.events.mousedown)\n        this.element.removeEventListener('mouseup', this.events.mouseup)\n        this.element.removeEventListener('mousemove', this.events.mousemove)\n        this.element.removeEventListener('touchstart', this.events.touchstart, { passive: true })\n        this.element.removeEventListener('touchmove', this.events.touchmove, { passive: true })\n        this.element.removeEventListener('touchcancel', this.events.touchcancel)\n        this.element.removeEventListener('touchend', this.events.touchend)\n    }\n\n    touchstart(e)\n    {\n        if (this.down === true)\n        {\n            this.cancel()\n        }\n        else\n        {\n            if (e.touches.length === 1)\n            {\n                this.handleDown(e.changedTouches[0].screenX, e.changedTouches[0].screenY)\n            }\n        }\n    }\n\n    pastThreshhold(x, y)\n    {\n        return Math.abs(this.lastX - x) > this.threshhold || Math.abs(this.lastY - y) > this.threshhold\n    }\n\n    touchmove(e)\n    {\n        if (this.down)\n        {\n            if (e.touches.length !== 1)\n            {\n                this.cancel()\n            }\n            else\n            {\n                const x = e.changedTouches[0].screenX\n                const y = e.changedTouches[0].screenY\n                if (this.pastThreshhold(x, y))\n                {\n                    this.cancel()\n                }\n            }\n        }\n    }\n\n    /** cancel current event */\n    cancel()\n    {\n        this.down = false\n        if (this.doubleClickedTimeout)\n        {\n            clearTimeout(this.doubleClickedTimeout)\n            this.doubleClickedTimeout = null\n        }\n        if (this.longClickedTimeout)\n        {\n            clearTimeout(this.longClickedTimeout)\n            this.longClickedTimeout = null\n        }\n    }\n\n    touchend(e)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.handleClicks(e, e.pointerId)\n        }\n    }\n\n    handleClicks(e)\n    {\n        if (this.options.doubleClicked)\n        {\n            this.doubleClickedTimeout = setTimeout(() => this.doubleClicked(e), this.options.doubleClickedTime)\n        }\n        else\n        {\n            this.callback({ event: e, type: 'clicked' })\n        }\n        if (this.longClickedTimeout)\n        {\n            clearTimeout(this.longClickedTimeout)\n            this.longClickedTimeout = null\n        }\n        this.down = false\n    }\n\n    handleDown(e, x, y)\n    {\n        if (this.doubleClickedTimeout)\n        {\n            if (this.pastThreshhold(x, y))\n            {\n                this.callback({ event: e, type: 'clicked' })\n                this.cancel()\n            }\n            else\n            {\n                this.callback({ event: e, type: 'double-clicked' })\n                this.cancel()\n            }\n        }\n        else\n        {\n            this.lastX = x\n            this.lastY = y\n            this.down = true\n            if (this.options.longClicked)\n            {\n                this.longClickedTimeout = setTimeout(() => this.longClicked(e), this.options.longClickedTime)\n            }\n        }\n    }\n\n    longClicked(e)\n    {\n        this.longClikedTimeout = null\n        this.down = false\n        this.callback({ event: e, type: 'long-clicked' })\n    }\n\n    doubleClicked(e)\n    {\n        this.doubleClickedTimeout = null\n        this.callback({ event: e, type: 'clicked' })\n    }\n\n    mousedown(e)\n    {\n        if (this.down === true)\n        {\n            this.down = false\n        }\n        else\n        {\n            this.handleDown(e, e.screenX, e.screenY)\n        }\n    }\n\n    mousemove(e)\n    {\n        if (this.down)\n        {\n            const x = e.screenX\n            const y = e.screenY\n            if (this.pastThreshhold(x, y))\n            {\n                this.cancel()\n            }\n        }\n    }\n\n    mouseup(e)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.handleClicks(e)\n        }\n    }\n}\n\n/**\n * Callback for\n * @callback Clicked~ClickedCallback\n * @param {UIEvent} event\n * @param {('clicked'|'double-clicked'|'long-clicked')} type\n */","import { clicked } from '../clicked.js'\n\nfunction el(query)\n{\n    return document.querySelector(query)\n}\n\nwindow.onload = () =>\n{\n    clicked('.element-1', e => el('.response-1').innerHTML = e.type)\n    clicked('.element-2', e => el('.response-2').innerHTML = e.type, { doubleClicked: true })\n    clicked('.element-3', e => el('.response-3').innerHTML = e.type, { longClicked: true })\n    clicked('.element-4', e => el('.response-4').innerHTML = e.type, { doubleClicked: true, longClicked: true })\n    clicked('.element-5', e => el('.response-5').innerHTML = e.type, { doubleClicked: true, doubleClickedTime: 1000})\n    clicked('.element-6', e => el('.response-6').innerHTML = e.type, { longClicked: true, longClickedTime: 1000 })\n}"]}